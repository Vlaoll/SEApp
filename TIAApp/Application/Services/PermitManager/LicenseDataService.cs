// Ignore Spelling: Conf

using Serilog;
using System;

namespace seConfSW.Services
{
    /// <summary>
    /// Mock implementation of LicenseDataService for generating license data.
    /// This service provides functionality to generate mock license data with configurable validity periods.
    /// </summary>
    public class LicenseDataService
    {
        #region Constants

        /// <summary>
        /// Prefix for all log entries generated by this service
        /// </summary>
        private const string LogPrefix = "[License]";

        #endregion
        #region Properties

        /// <summary>
        /// Logger instance for recording service operations and events
        /// </summary>
        private readonly ILogger _logger;

        #endregion
        #region Constructor

        /// <summary>
        /// Initializes a new instance of the <see cref="LicenseDataService"/> class.
        /// </summary>
        /// <param name="logger">The logger instance for logging operations. Must not be null.</param>
        /// <exception cref="ArgumentNullException">Thrown when logger parameter is null.</exception>
        public LicenseDataService(ILogger logger)
        {
            _logger = logger ?? throw new ArgumentNullException(nameof(logger));
        }

        #endregion
        #region Public Methods

        /// <summary>
        /// Generates mock license data with a specified validity period.
        /// </summary>
        /// <param name="daysValid">The number of days the license should remain valid from the current date.
        /// Must be a positive integer.</param>
        /// <returns>
        /// A tuple containing:
        /// - data: Mock license data string ("MockLicenseData")
        /// - expiryDate: Calculated expiration date (current date + daysValid)
        /// </returns>
        /// <remarks>
        /// This method generates static mock data for demonstration purposes.
        /// In a production environment, this would generate actual license data.
        /// </remarks>
        public (string data, DateTime expiryDate) GenerateLicenseData(int daysValid)
        {
            _logger.Information($"{LogPrefix} Generating license data with validity of {daysValid} days.");
            return ("MockLicenseData", DateTime.Now.AddDays(daysValid));
        }

        #endregion
    }
}